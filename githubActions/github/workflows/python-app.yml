name: Python CI/CD Demo

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ] # Теги вида v1.0.0 будут триггерить деплой
  pull_request:
    branches: [ "master" ]

jobs:
  # ---------- Линтер ----------
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 src tests

  # ---------- Тесты (matrix build) ----------
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Кэширование зависимостей для ускорения
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: python -m pytest --junitxml=test-results.xml

      # Сохраняем артефакты с результатами тестов
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.python-version }}
          path: test-results.xml

  # ---------- Deploy ----------
  deploy:
  needs: [lint, test]
  if: startsWith(github.ref, 'refs/tags/v')
  runs-on: ubuntu-latest
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Create archive
      run: tar czf release-${{ github.ref_name }}.tar.gz src tests

    - name: Upload release artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ github.ref_name }}
        path: release-${{ github.ref_name }}.tar.gz

